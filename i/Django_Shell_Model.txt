https://docs.djangoproject.com/en/2.2/topics/db/queries/
https://docs.djangoproject.com/en/2.2/ref/models/querysets/#field-lookups
https://developer.mozilla.org/ru/docs/Learn/Server-side/Django/Models

class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')
    def __str__(self):
        return self.question_text

    def was_published_recently(self):
        return self.pub_date >= timezone.now() - datetime.timedelta(days=5)

class Choice(models.Model):
    question = models.ForeignKey(Question, on_delete=models.CASCADE)
    choice_text = models.CharField(max_length=200)
    votes = models.IntegerField(default=0)
    def __str__(self):
        return self.choice_text

    def was_published_recently(self):
        return self.pub_date <= timezone.now() - datetime.timedelta(days=3)


----------
python3 manage.py makemigrations polls
python3 manage.py migrate
или
python3 manage.py sqlmigrate polls 0001

python3 manage.py shell
from polls.models import Question, Choice
Question.objects.all()
Question.objects.values()
Choice.objects.all()
Choice.objects.values()

a = Question.objects.all()
b = Choice.objects.all()
a.values_list()


from django.utils import timezone
timezone.tab
timezone.now()
timezone.localtime().hour
timezone.localtime().month
current_year = timezone.now().year

tmp = Question(question_text = "Вопрос 1?", pub_date = timezone.localtime())
tmp.save()
a = Question.objects.all()
Question.objects.get(id = 1)
a.get(id = 1)

a_new = Question.objects.get(id = 2)
a_new.question_text = "Вопрос 2?"
a_new.save()

a_new = Question.objects.get(question_text = 'Вопрос 4')
a_new.choice_set.create(choice_text = "Выбор42",  votes = 42)

a_new.choice_set.create(choice_text = "Выбор1",  votes = 1)
Choice.objects.all()
Choice.objects.values('choice_text')
b1 = Choice.objects.all()
b1.values()
b1.values('choice_text')
Choice.objects.filter(question_id= 3)
Choice.objects.filter(question_id= 3).values('id')

b2_del = Choice.objects.filter(id= 2)
b2_del.delete() 

Question.objects.get(id = 1)


b = Question.objects.get(id = 1)
b.question_text
Question.objects.get(id = 1).pub_date
Question.objects.filter(pub_date__year = current_year)
a.choice_set.all()
a.choice_text_set.all()
choice_text


